import 'package:flutter/material.dart';
import 'package:flutter/semantics.dart';

class ProductCategoryWidget extends StatelessWidget {
  const ProductCategoryWidget({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: BoxDecoration(
        borderRadius: BorderRadius.circular(12),
        color: const Color(0xFFFEFEFE),
      ),
      padding: const EdgeInsets.all(8),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            'Product category',
            style: TextStyle(
              color: const Color(0xFF343232),
              fontSize: 14,
              fontFamily: 'Inter Display',
              fontWeight: FontWeight.w400,
            ),
          ),
          const SizedBox(height: 12),
          Wrap(
            spacing: 8,
            runSpacing: 12,
            children: [
              _buildCategoryButton(
                label: 'Document',
                isSelected: true,
                iconPath: 'https://cdn.builder.io/api/v1/image/assets/TEMP/0f3488d1e2d9b870426fb9530f84a0793c41193d9e878b78ce1e78affeceb161?placeholderIfAbsent=true&apiKey=0a2fa351ab2e441c99ca3f3c8bf81c09',
              ),
              _buildCategoryButton(label: 'Fluid'),
              _buildCategoryButton(label: 'Bus'),
              _buildCategoryButton(label: 'Cargo'),
              _buildCategoryButton(label: 'Bike'),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildCategoryButton({
    required String label,
    bool isSelected = false,
    String? iconPath,
  }) {
    return Semantics(
      button: true,
      label: '$label category',
      selected: isSelected,
      child: OutlinedButton(
        onPressed: () {},
        style: OutlinedButton.styleFrom(
          backgroundColor: isSelected ? const Color(0xFF47862D) : Colors.white,
          side: BorderSide(
            color: isSelected ? Colors.transparent : const Color(0xFFA1A1A1),
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(6),
          ),
          padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
        ),
        child: Row(
          mainAxisSize: MainAxisSize.min,
          children: [
            if (iconPath != null)
              Image.network(
                iconPath,
                width: 20,
                height: 20,
                semanticLabel: '$label icon',
              ),
            if (iconPath != null) const SizedBox(width: 8),
            Text(
              label,
              style: TextStyle(
                color: isSelected ? Colors.white : const Color(0xFFA1A1A1),
                fontSize: 14,
                fontFamily: 'Satoshi',
                fontWeight: FontWeight.w400,
              ),
            ),
          ],
        ),
      ),
    );
  }
}